{"title":"NPM 图床探究","slug":"hexo/npm","date":"2021-11-07T07:20:55.000Z","updated":"2023-01-03T09:45:16.533Z","comments":true,"path":"api/articles/hexo/npm.json","excerpt":null,"covers":null,"content":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>最近在吾爱发帖，苦于福利区不能贴图，要用自己的图床，然后我用了又拍云，一个帖子，一天，3 元。</p>\n<p>这个价格有点贵了 hhh，所以想要找个稳定的图床，本来用 jsd + GitHub 但是论坛屏蔽掉了 jsd 好像是因为会传播木马什么的，总之是不安全。</p>\n<p>而且写教程还是蛮辛苦的，不想因为图床挂了而不能看，所以想要一个稳定的免费的图床，所以就想到了 npm</p>\n<p>经测试 NPM 不会被论坛审核，可以使用</p>\n<h2 id=\"NPM-图床创建及日常使用\"><a href=\"#NPM-图床创建及日常使用\" class=\"headerlink\" title=\"NPM 图床创建及日常使用\"></a>NPM 图床创建及日常使用</h2><p>这里给店长打个广告，我也是通过<a href=\"https://akilar.top/\">店长</a>和<a href=\"https://cyfan.top/\">cyfan</a>才了解到 npm 图床的</p>\n<p><a href=\"https://akilar.top/posts/3e956346/\">npm 图床的使用</a></p>\n<h2 id=\"NPM-图床的自动化\"><a href=\"#NPM-图床的自动化\" class=\"headerlink\" title=\"NPM 图床的自动化\"></a>NPM 图床的自动化</h2><p>流程如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">graph TD;</span><br><span class=\"line\">    Picgo上传多张图片到GitHub --&gt; Windows自动更新npm包版本;</span><br><span class=\"line\">    Windows自动更新npm包版本--&gt;自动查找替换链接;</span><br><span class=\"line\">    Windows自动更新npm包版本--&gt; GithubAction自动发包;</span><br><span class=\"line\">    GithubAction自动发包 --&gt; 图床更新完成;</span><br><span class=\"line\">    自动查找替换链接--&gt;push博客仓库;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Picgo-上传图片到-GitHub\"><a href=\"#Picgo-上传图片到-GitHub\" class=\"headerlink\" title=\"Picgo 上传图片到 GitHub\"></a>Picgo 上传图片到 GitHub</h3><p>这一步的目的是方便预览，而且为后面查找替换打个基础</p>\n<p>而且这一步会遇到 GitHubaction 报错 这不重要 关掉通知 直接无视</p>\n<h3 id=\"GitHub-Action-自动推送到-npm\"><a href=\"#GitHub-Action-自动推送到-npm\" class=\"headerlink\" title=\"GitHub Action 自动推送到 npm\"></a>GitHub Action 自动推送到 npm</h3><p>这个教程里面有写，不再赘述<a href=\"https://akilar.top/posts/3e956346/\">npm 图床的使用</a></p>\n<p>至于为什么使用 action 发包是因为图床很大，发包很慢</p>\n<h3 id=\"Windows-自动发包\"><a href=\"#Windows-自动发包\" class=\"headerlink\" title=\"Windows 自动发包\"></a>Windows 自动发包</h3><p>利用 shell 脚本，这个脚本放到图床仓库根目录运行即可</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit  -m &#x27; ty &#x27;</span><br><span class=\"line\">npm version patch</span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n<p>内容其实很简单，就是简单的 git 命令</p>\n<h3 id=\"批量查找替换\"><a href=\"#批量查找替换\" class=\"headerlink\" title=\"批量查找替换\"></a>批量查找替换</h3><figure class=\"highlight plaintext\"><figcaption><span>`sed` 命令 挺好的~~~</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这里是利用shell脚本的查找替换功能比如将`3.txt`中的 `npm.elemecdn.com/wxydeimage` 替换成 `npm.elemecdn.com/wxydeimage@1.0.23` 其中有转义符号</span><br><span class=\"line\"></span><br><span class=\"line\">`sed -i &#x27;s/cdn.jsdelivr.net\\/gh\\/wxydejoy\\/image/npm.elemecdn.com\\/wxydeimage@1.0.23/g&#x27; 3.txt `</span><br><span class=\"line\"></span><br><span class=\"line\">加上文件遍历，就变成了这个样子。这个脚本放在博客根目录即可</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">#folder=&quot;./test&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">function readfile ()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">#这里`为esc下面的按键符号</span><br><span class=\"line\">  for file in `ls $1`</span><br><span class=\"line\">  do</span><br><span class=\"line\">#这里的-d表示是一个directory，即目录/子文件夹</span><br><span class=\"line\">    if [ -d $1&quot;/&quot;$file ]</span><br><span class=\"line\">    then</span><br><span class=\"line\">#如果子文件夹则递归</span><br><span class=\"line\">      readfile $1&quot;/&quot;$file</span><br><span class=\"line\">    else</span><br><span class=\"line\">#否则就能够读取该文件的地址</span><br><span class=\"line\">      echo $1&quot;/&quot;$file</span><br><span class=\"line\">#读取该文件的文件名，basename是提取文件名的关键字</span><br><span class=\"line\">   sed -i &#x27;s/cdn.jsdelivr.net\\/gh\\/wxydejoy\\/image/npm.elemecdn.com\\/wxydeimage@1.0.23/g&#x27; $folder/$file</span><br><span class=\"line\">   fi</span><br><span class=\"line\">  done</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#函数定义结束，这里用来运行函数</span><br><span class=\"line\">folder=&quot;./source/_post&quot;</span><br><span class=\"line\">readfile $folder</span><br><span class=\"line\">```</span><br><span class=\"line\"></span><br><span class=\"line\">其中`wxydejoy image`是GitHub用户名和仓库`wxydeimage`是`npm`包名，`1.0.23` 是版本号</span><br><span class=\"line\"></span><br><span class=\"line\">写着写着电脑黑屏了，吓死，幸亏是vscode自动保存了，有惊无险</span><br><span class=\"line\"></span><br><span class=\"line\">## 完全自动化</span><br><span class=\"line\"></span><br><span class=\"line\">我的目标是只要在提交之前运行一次脚本，无需手动修改版本号</span><br><span class=\"line\"></span><br><span class=\"line\">==敬请期待==</span><br><span class=\"line\"></span><br><span class=\"line\">## 后话</span><br><span class=\"line\"></span><br><span class=\"line\">今天看到npm的图床是想换来着，但是跑了一下速度，还是又拍云香，npm就用来论坛发帖吧，不过这个方案比较适合没有又拍云的同学。�</span><br></pre></td></tr></table></figure>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","more":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>最近在吾爱发帖，苦于福利区不能贴图，要用自己的图床，然后我用了又拍云，一个帖子，一天，3 元。</p>\n<p>这个价格有点贵了 hhh，所以想要找个稳定的图床，本来用 jsd + GitHub 但是论坛屏蔽掉了 jsd 好像是因为会传播木马什么的，总之是不安全。</p>\n<p>而且写教程还是蛮辛苦的，不想因为图床挂了而不能看，所以想要一个稳定的免费的图床，所以就想到了 npm</p>\n<p>经测试 NPM 不会被论坛审核，可以使用</p>\n<h2 id=\"NPM-图床创建及日常使用\"><a href=\"#NPM-图床创建及日常使用\" class=\"headerlink\" title=\"NPM 图床创建及日常使用\"></a>NPM 图床创建及日常使用</h2><p>这里给店长打个广告，我也是通过<a href=\"https://akilar.top/\">店长</a>和<a href=\"https://cyfan.top/\">cyfan</a>才了解到 npm 图床的</p>\n<p><a href=\"https://akilar.top/posts/3e956346/\">npm 图床的使用</a></p>\n<h2 id=\"NPM-图床的自动化\"><a href=\"#NPM-图床的自动化\" class=\"headerlink\" title=\"NPM 图床的自动化\"></a>NPM 图床的自动化</h2><p>流程如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">graph TD;</span><br><span class=\"line\">    Picgo上传多张图片到GitHub --&gt; Windows自动更新npm包版本;</span><br><span class=\"line\">    Windows自动更新npm包版本--&gt;自动查找替换链接;</span><br><span class=\"line\">    Windows自动更新npm包版本--&gt; GithubAction自动发包;</span><br><span class=\"line\">    GithubAction自动发包 --&gt; 图床更新完成;</span><br><span class=\"line\">    自动查找替换链接--&gt;push博客仓库;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Picgo-上传图片到-GitHub\"><a href=\"#Picgo-上传图片到-GitHub\" class=\"headerlink\" title=\"Picgo 上传图片到 GitHub\"></a>Picgo 上传图片到 GitHub</h3><p>这一步的目的是方便预览，而且为后面查找替换打个基础</p>\n<p>而且这一步会遇到 GitHubaction 报错 这不重要 关掉通知 直接无视</p>\n<h3 id=\"GitHub-Action-自动推送到-npm\"><a href=\"#GitHub-Action-自动推送到-npm\" class=\"headerlink\" title=\"GitHub Action 自动推送到 npm\"></a>GitHub Action 自动推送到 npm</h3><p>这个教程里面有写，不再赘述<a href=\"https://akilar.top/posts/3e956346/\">npm 图床的使用</a></p>\n<p>至于为什么使用 action 发包是因为图床很大，发包很慢</p>\n<h3 id=\"Windows-自动发包\"><a href=\"#Windows-自动发包\" class=\"headerlink\" title=\"Windows 自动发包\"></a>Windows 自动发包</h3><p>利用 shell 脚本，这个脚本放到图床仓库根目录运行即可</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit  -m &#x27; ty &#x27;</span><br><span class=\"line\">npm version patch</span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n<p>内容其实很简单，就是简单的 git 命令</p>\n<h3 id=\"批量查找替换\"><a href=\"#批量查找替换\" class=\"headerlink\" title=\"批量查找替换\"></a>批量查找替换</h3><figure class=\"highlight plaintext\"><figcaption><span>`sed` 命令 挺好的~~~</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这里是利用shell脚本的查找替换功能比如将`3.txt`中的 `npm.elemecdn.com/wxydeimage` 替换成 `npm.elemecdn.com/wxydeimage@1.0.23` 其中有转义符号</span><br><span class=\"line\"></span><br><span class=\"line\">`sed -i &#x27;s/cdn.jsdelivr.net\\/gh\\/wxydejoy\\/image/npm.elemecdn.com\\/wxydeimage@1.0.23/g&#x27; 3.txt `</span><br><span class=\"line\"></span><br><span class=\"line\">加上文件遍历，就变成了这个样子。这个脚本放在博客根目录即可</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">#folder=&quot;./test&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">function readfile ()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">#这里`为esc下面的按键符号</span><br><span class=\"line\">  for file in `ls $1`</span><br><span class=\"line\">  do</span><br><span class=\"line\">#这里的-d表示是一个directory，即目录/子文件夹</span><br><span class=\"line\">    if [ -d $1&quot;/&quot;$file ]</span><br><span class=\"line\">    then</span><br><span class=\"line\">#如果子文件夹则递归</span><br><span class=\"line\">      readfile $1&quot;/&quot;$file</span><br><span class=\"line\">    else</span><br><span class=\"line\">#否则就能够读取该文件的地址</span><br><span class=\"line\">      echo $1&quot;/&quot;$file</span><br><span class=\"line\">#读取该文件的文件名，basename是提取文件名的关键字</span><br><span class=\"line\">   sed -i &#x27;s/cdn.jsdelivr.net\\/gh\\/wxydejoy\\/image/npm.elemecdn.com\\/wxydeimage@1.0.23/g&#x27; $folder/$file</span><br><span class=\"line\">   fi</span><br><span class=\"line\">  done</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#函数定义结束，这里用来运行函数</span><br><span class=\"line\">folder=&quot;./source/_post&quot;</span><br><span class=\"line\">readfile $folder</span><br><span class=\"line\">```</span><br><span class=\"line\"></span><br><span class=\"line\">其中`wxydejoy image`是GitHub用户名和仓库`wxydeimage`是`npm`包名，`1.0.23` 是版本号</span><br><span class=\"line\"></span><br><span class=\"line\">写着写着电脑黑屏了，吓死，幸亏是vscode自动保存了，有惊无险</span><br><span class=\"line\"></span><br><span class=\"line\">## 完全自动化</span><br><span class=\"line\"></span><br><span class=\"line\">我的目标是只要在提交之前运行一次脚本，无需手动修改版本号</span><br><span class=\"line\"></span><br><span class=\"line\">==敬请期待==</span><br><span class=\"line\"></span><br><span class=\"line\">## 后话</span><br><span class=\"line\"></span><br><span class=\"line\">今天看到npm的图床是想换来着，但是跑了一下速度，还是又拍云香，npm就用来论坛发帖吧，不过这个方案比较适合没有又拍云的同学。�</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"💻Code","path":"api/categories/💻Code.json"}],"tags":[{"name":"💻Hexo","path":"api/tags/💻Hexo.json"}]}
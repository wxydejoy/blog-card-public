{"title":"Python 爬虫之 DrissionPage","slug":"post/code/py/Python 爬虫之 DrissionPage","date":"2024-03-15T01:56:24.000Z","updated":"2024-03-15T01:56:24.000Z","comments":true,"path":"api/articles/post/code/py/Python 爬虫之 DrissionPage.json","excerpt":null,"covers":null,"content":"<h2 id=\"DrissionPage-是什么\"><a href=\"#DrissionPage-是什么\" class=\"headerlink\" title=\"DrissionPage 是什么\"></a>DrissionPage 是什么</h2><p>DrissionPage 是一个基于 python 的网页自动化工具。<br>它既能控制浏览器，也能收发数据包，还能把两者合而为一。<br>可兼顾浏览器自动化的便利性和 requests 的高效率。<br>它功能强大，内置无数人性化设计和便捷功能。<br>它的语法简洁而优雅，代码量少，对新手友好。</p>\n<p>用 requests 做数据采集面对要登录的网站时，要分析数据包、JS 源码，构造复杂的请求，往往还要应付验证码、JS 混淆、签名参数等反爬手段，门槛较高，开发效率不高。使用浏览器，可以很大程度上绕过这些坑，但浏览器运行效率不高。</p>\n<p>因此，这个库设计初衷，是将它们合而为一，同时实现“写得快”和“跑得快”。能够在不同需要时切换相应模式，并提供一种人性化的使用方法，提高开发和运行效率。<br>除了合并两者，本库还以网页为单位封装了常用功能，提供非常简便的操作和语句，使用户可减少考虑细节，专注功能实现。 以简单的方式实现强大的功能，使代码更优雅。</p>\n<p>以前的版本是对 selenium 进行重新封装实现的。从 3.0 开始，作者另起炉灶，对底层进行了重新开发，摆脱对 selenium 的依赖，增强了功能，提升了运行效率。</p>\n<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from DrissionPage import ChromiumPage</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建页面对象，并启动或接管浏览器</span></span><br><span class=\"line\"><span class=\"keyword\">page</span> = ChromiumPage()</span><br><span class=\"line\"><span class=\"comment\"># 跳转到登录页面</span></span><br><span class=\"line\"><span class=\"keyword\">page</span>.get(<span class=\"string\">&#x27;https://gitee.com/login&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定位到账号文本框，获取文本框元素</span></span><br><span class=\"line\">ele = <span class=\"keyword\">page</span>.ele(<span class=\"string\">&#x27;#user_login&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 输入对文本框输入账号</span></span><br><span class=\"line\">ele.input(<span class=\"string\">&#x27;您的账号&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 定位到密码文本框并输入密码</span></span><br><span class=\"line\"><span class=\"keyword\">page</span>.ele(<span class=\"string\">&#x27;#user_password&#x27;</span>).input(<span class=\"string\">&#x27;您的密码&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 点击登录按钮</span></span><br><span class=\"line\"><span class=\"keyword\">page</span>.ele(<span class=\"string\">&#x27;@value=登 录&#x27;</span>).click()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"应用实例\"><a href=\"#应用实例\" class=\"headerlink\" title=\"应用实例\"></a>应用实例</h2><h3 id=\"淘宝商品截图\"><a href=\"#淘宝商品截图\" class=\"headerlink\" title=\"淘宝商品截图\"></a>淘宝商品截图</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 部分代码</span></span><br><span class=\"line\">page = ChromiumPage(co)</span><br><span class=\"line\">page.get(img_url,retry=<span class=\"number\">1</span>, interval=<span class=\"number\">1</span>, timeout=<span class=\"number\">1.5</span>)</span><br><span class=\"line\">                </span><br><span class=\"line\">img = page(<span class=\"string\">&#x27;tag:img&#x27;</span>)</span><br><span class=\"line\">img.get_screenshot(path=<span class=\"string\">&#x27;./&#x27;</span>, name=<span class=\"string\">&#x27;temp_img.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"未来工厂订单数据爬取\"><a href=\"#未来工厂订单数据爬取\" class=\"headerlink\" title=\"未来工厂订单数据爬取\"></a>未来工厂订单数据爬取</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> DrissionPage <span class=\"keyword\">import</span> SessionPage, SessionOptions <span class=\"comment\"># pip install DrissionPage</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> DrissionPage <span class=\"keyword\">import</span> ChromiumPage</span><br><span class=\"line\"><span class=\"keyword\">from</span> DrissionPage <span class=\"keyword\">import</span> ChromiumOptions</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">co = ChromiumOptions(read_file=<span class=\"literal\">False</span>)  <span class=\"comment\"># 不读取文件方式新建配置对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">co.set_browser_path(<span class=\"string\">r&#x27;C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe&#x27;</span>)  <span class=\"comment\"># 设置浏览器路径</span></span><br><span class=\"line\"><span class=\"comment\"># co.set_argument(&#x27;--headless&#x27;)  # 设置无头模式 隐藏浏览器界面</span></span><br><span class=\"line\"><span class=\"comment\"># 设置配置文件路径</span></span><br><span class=\"line\">co.set_user_data_path(<span class=\"string\">r&#x27;C:\\Users\\weiek\\AppData\\Local\\Google\\Chrome\\User Data&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url_base = <span class=\"string\">&quot;https://www.wenext.cn/index.php?route=account/order&amp;filter_time=6&amp;page=&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">page = ChromiumPage(co)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cp = ChromiumPage(co)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    url = url_base + <span class=\"built_in\">str</span>(i)</span><br><span class=\"line\">    page.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 等待页面加载完成</span></span><br><span class=\"line\">    page.wait.doc_loaded()</span><br><span class=\"line\">    <span class=\"comment\"># 从 page.html 正则匹配订单号 订单编号 86027961</span></span><br><span class=\"line\">    result_num = re.findall(<span class=\"string\">r&#x27;订单编号 (\\d+)&#x27;</span>, page.html)</span><br><span class=\"line\">    <span class=\"comment\"># print(result_num)</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> result_num:</span><br><span class=\"line\">            page.get(<span class=\"string\">&#x27;https://www.wenext.cn/index.php?route=account/order/info&amp;order_id=&#x27;</span> + i)</span><br><span class=\"line\">            page.wait.doc_loaded()</span><br><span class=\"line\">            <span class=\"comment\"># print(page.html)</span></span><br><span class=\"line\">            <span class=\"comment\"># 正则匹配订单金额 余额(158.00) 余额(158)</span></span><br><span class=\"line\">            result_money = re.findall(<span class=\"string\">r&#x27;余额\\((.*?)\\)&#x27;</span>, page.html)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(result_money)</span><br><span class=\"line\">            <span class=\"comment\"># time.sleep(10)</span></span><br><span class=\"line\">            <span class=\"comment\"># 正则匹预计在2024-03-17 23:00:00前发货</span></span><br><span class=\"line\">            result_time1 = re.findall(<span class=\"string\">r&#x27;预计在(.*?)前发货&#x27;</span>, page.html)[<span class=\"number\">0</span>].replace(<span class=\"string\">&#x27;23:00:00&#x27;</span>, <span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(result_time1)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 正则匹配                   &lt;td class=&quot;order-body-time&quot;&gt;2024-03-10&lt;/td&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"># &lt;td class=&quot;order-body-time&quot;&gt;2024-03-10&lt;/td&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"># &lt;td class=&quot;order-body-time&quot;&gt;已发货，待签收&lt;/td&gt;</span></span><br><span class=\"line\">            result_time2_list = re.findall(<span class=\"string\">r&#x27;&lt;td class=&quot;order-body-time&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>, page.html, re.S)</span><br><span class=\"line\">            result_time2 = <span class=\"string\">&#x27;0&#x27;</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> result_time2_list:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> j == <span class=\"string\">&#x27;已发货，待签收&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\"># 获取索引</span></span><br><span class=\"line\">                    index = result_time2_list.index(j)</span><br><span class=\"line\">                    <span class=\"comment\"># 获取发货时间</span></span><br><span class=\"line\">                    result_time2 = result_time2_list[index - <span class=\"number\">1</span>]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> result_time2 != <span class=\"string\">&#x27;0&#x27;</span>:</span><br><span class=\"line\">                <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;wenext.txt&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> f: </span><br><span class=\"line\">                    <span class=\"comment\"># 写入文件 订单号 订单金额 预计发货时间  实际发货时间</span></span><br><span class=\"line\">                    f.write(i + <span class=\"string\">&#x27;\t&#x27;</span> + result_money + <span class=\"string\">&#x27;\t&#x27;</span> + result_time1 + <span class=\"string\">&#x27;\t&#x27;</span> + result_time2 + <span class=\"string\">&#x27;    &#x27;</span>+<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(result_time2)</span><br><span class=\"line\">            <span class=\"comment\"># time.sleep(1)</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;wenexterr.txt&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> f: </span><br><span class=\"line\">            f.write(i + <span class=\"string\">&#x27;\t&#x27;</span> + <span class=\"string\">&#x27;error&#x27;</span> + <span class=\"string\">&#x27;\t&#x27;</span> + <span class=\"string\">&#x27;error&#x27;</span> + <span class=\"string\">&#x27;\t&#x27;</span> + <span class=\"string\">&#x27;error&#x27;</span> + <span class=\"string\">&#x27;    &#x27;</span>+<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n","more":"<h2 id=\"DrissionPage-是什么\"><a href=\"#DrissionPage-是什么\" class=\"headerlink\" title=\"DrissionPage 是什么\"></a>DrissionPage 是什么</h2><p>DrissionPage 是一个基于 python 的网页自动化工具。<br>它既能控制浏览器，也能收发数据包，还能把两者合而为一。<br>可兼顾浏览器自动化的便利性和 requests 的高效率。<br>它功能强大，内置无数人性化设计和便捷功能。<br>它的语法简洁而优雅，代码量少，对新手友好。</p>\n<p>用 requests 做数据采集面对要登录的网站时，要分析数据包、JS 源码，构造复杂的请求，往往还要应付验证码、JS 混淆、签名参数等反爬手段，门槛较高，开发效率不高。使用浏览器，可以很大程度上绕过这些坑，但浏览器运行效率不高。</p>\n<p>因此，这个库设计初衷，是将它们合而为一，同时实现“写得快”和“跑得快”。能够在不同需要时切换相应模式，并提供一种人性化的使用方法，提高开发和运行效率。<br>除了合并两者，本库还以网页为单位封装了常用功能，提供非常简便的操作和语句，使用户可减少考虑细节，专注功能实现。 以简单的方式实现强大的功能，使代码更优雅。</p>\n<p>以前的版本是对 selenium 进行重新封装实现的。从 3.0 开始，作者另起炉灶，对底层进行了重新开发，摆脱对 selenium 的依赖，增强了功能，提升了运行效率。</p>\n<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from DrissionPage import ChromiumPage</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建页面对象，并启动或接管浏览器</span></span><br><span class=\"line\"><span class=\"keyword\">page</span> = ChromiumPage()</span><br><span class=\"line\"><span class=\"comment\"># 跳转到登录页面</span></span><br><span class=\"line\"><span class=\"keyword\">page</span>.get(<span class=\"string\">&#x27;https://gitee.com/login&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定位到账号文本框，获取文本框元素</span></span><br><span class=\"line\">ele = <span class=\"keyword\">page</span>.ele(<span class=\"string\">&#x27;#user_login&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 输入对文本框输入账号</span></span><br><span class=\"line\">ele.input(<span class=\"string\">&#x27;您的账号&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 定位到密码文本框并输入密码</span></span><br><span class=\"line\"><span class=\"keyword\">page</span>.ele(<span class=\"string\">&#x27;#user_password&#x27;</span>).input(<span class=\"string\">&#x27;您的密码&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 点击登录按钮</span></span><br><span class=\"line\"><span class=\"keyword\">page</span>.ele(<span class=\"string\">&#x27;@value=登 录&#x27;</span>).click()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"应用实例\"><a href=\"#应用实例\" class=\"headerlink\" title=\"应用实例\"></a>应用实例</h2><h3 id=\"淘宝商品截图\"><a href=\"#淘宝商品截图\" class=\"headerlink\" title=\"淘宝商品截图\"></a>淘宝商品截图</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 部分代码</span></span><br><span class=\"line\">page = ChromiumPage(co)</span><br><span class=\"line\">page.get(img_url,retry=<span class=\"number\">1</span>, interval=<span class=\"number\">1</span>, timeout=<span class=\"number\">1.5</span>)</span><br><span class=\"line\">                </span><br><span class=\"line\">img = page(<span class=\"string\">&#x27;tag:img&#x27;</span>)</span><br><span class=\"line\">img.get_screenshot(path=<span class=\"string\">&#x27;./&#x27;</span>, name=<span class=\"string\">&#x27;temp_img.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"未来工厂订单数据爬取\"><a href=\"#未来工厂订单数据爬取\" class=\"headerlink\" title=\"未来工厂订单数据爬取\"></a>未来工厂订单数据爬取</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> DrissionPage <span class=\"keyword\">import</span> SessionPage, SessionOptions <span class=\"comment\"># pip install DrissionPage</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> DrissionPage <span class=\"keyword\">import</span> ChromiumPage</span><br><span class=\"line\"><span class=\"keyword\">from</span> DrissionPage <span class=\"keyword\">import</span> ChromiumOptions</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">co = ChromiumOptions(read_file=<span class=\"literal\">False</span>)  <span class=\"comment\"># 不读取文件方式新建配置对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">co.set_browser_path(<span class=\"string\">r&#x27;C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe&#x27;</span>)  <span class=\"comment\"># 设置浏览器路径</span></span><br><span class=\"line\"><span class=\"comment\"># co.set_argument(&#x27;--headless&#x27;)  # 设置无头模式 隐藏浏览器界面</span></span><br><span class=\"line\"><span class=\"comment\"># 设置配置文件路径</span></span><br><span class=\"line\">co.set_user_data_path(<span class=\"string\">r&#x27;C:\\Users\\weiek\\AppData\\Local\\Google\\Chrome\\User Data&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url_base = <span class=\"string\">&quot;https://www.wenext.cn/index.php?route=account/order&amp;filter_time=6&amp;page=&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">page = ChromiumPage(co)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cp = ChromiumPage(co)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    url = url_base + <span class=\"built_in\">str</span>(i)</span><br><span class=\"line\">    page.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 等待页面加载完成</span></span><br><span class=\"line\">    page.wait.doc_loaded()</span><br><span class=\"line\">    <span class=\"comment\"># 从 page.html 正则匹配订单号 订单编号 86027961</span></span><br><span class=\"line\">    result_num = re.findall(<span class=\"string\">r&#x27;订单编号 (\\d+)&#x27;</span>, page.html)</span><br><span class=\"line\">    <span class=\"comment\"># print(result_num)</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> result_num:</span><br><span class=\"line\">            page.get(<span class=\"string\">&#x27;https://www.wenext.cn/index.php?route=account/order/info&amp;order_id=&#x27;</span> + i)</span><br><span class=\"line\">            page.wait.doc_loaded()</span><br><span class=\"line\">            <span class=\"comment\"># print(page.html)</span></span><br><span class=\"line\">            <span class=\"comment\"># 正则匹配订单金额 余额(158.00) 余额(158)</span></span><br><span class=\"line\">            result_money = re.findall(<span class=\"string\">r&#x27;余额\\((.*?)\\)&#x27;</span>, page.html)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(result_money)</span><br><span class=\"line\">            <span class=\"comment\"># time.sleep(10)</span></span><br><span class=\"line\">            <span class=\"comment\"># 正则匹预计在2024-03-17 23:00:00前发货</span></span><br><span class=\"line\">            result_time1 = re.findall(<span class=\"string\">r&#x27;预计在(.*?)前发货&#x27;</span>, page.html)[<span class=\"number\">0</span>].replace(<span class=\"string\">&#x27;23:00:00&#x27;</span>, <span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(result_time1)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 正则匹配                   &lt;td class=&quot;order-body-time&quot;&gt;2024-03-10&lt;/td&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"># &lt;td class=&quot;order-body-time&quot;&gt;2024-03-10&lt;/td&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"># &lt;td class=&quot;order-body-time&quot;&gt;已发货，待签收&lt;/td&gt;</span></span><br><span class=\"line\">            result_time2_list = re.findall(<span class=\"string\">r&#x27;&lt;td class=&quot;order-body-time&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>, page.html, re.S)</span><br><span class=\"line\">            result_time2 = <span class=\"string\">&#x27;0&#x27;</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> result_time2_list:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> j == <span class=\"string\">&#x27;已发货，待签收&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\"># 获取索引</span></span><br><span class=\"line\">                    index = result_time2_list.index(j)</span><br><span class=\"line\">                    <span class=\"comment\"># 获取发货时间</span></span><br><span class=\"line\">                    result_time2 = result_time2_list[index - <span class=\"number\">1</span>]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> result_time2 != <span class=\"string\">&#x27;0&#x27;</span>:</span><br><span class=\"line\">                <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;wenext.txt&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> f: </span><br><span class=\"line\">                    <span class=\"comment\"># 写入文件 订单号 订单金额 预计发货时间  实际发货时间</span></span><br><span class=\"line\">                    f.write(i + <span class=\"string\">&#x27;\t&#x27;</span> + result_money + <span class=\"string\">&#x27;\t&#x27;</span> + result_time1 + <span class=\"string\">&#x27;\t&#x27;</span> + result_time2 + <span class=\"string\">&#x27;    &#x27;</span>+<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(result_time2)</span><br><span class=\"line\">            <span class=\"comment\"># time.sleep(1)</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;wenexterr.txt&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> f: </span><br><span class=\"line\">            f.write(i + <span class=\"string\">&#x27;\t&#x27;</span> + <span class=\"string\">&#x27;error&#x27;</span> + <span class=\"string\">&#x27;\t&#x27;</span> + <span class=\"string\">&#x27;error&#x27;</span> + <span class=\"string\">&#x27;\t&#x27;</span> + <span class=\"string\">&#x27;error&#x27;</span> + <span class=\"string\">&#x27;    &#x27;</span>+<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n","categories":[{"name":"💻Code","path":"api/categories/💻Code.json"}],"tags":[{"name":"💻Code","path":"api/tags/💻Code.json"},{"name":"🕷️Python","path":"api/tags/🕷️Python.json"}]}
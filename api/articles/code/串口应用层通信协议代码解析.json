{"title":"串口应用层通信协议代码解析","slug":"code/串口应用层通信协议代码解析","date":"2023-01-12T11:06:46.000Z","updated":"2023-06-05T13:02:47.977Z","comments":true,"path":"api/articles/code/串口应用层通信协议代码解析.json","excerpt":null,"covers":null,"content":"<h2 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h2><p><a href=\"https://baike.baidu.com/item/%E4%B8%B2%E8%A1%8C%E7%AB%AF%E5%8F%A3\">串口</a>这里不再多说，不懂的进链接去了解一下。在STM32中，串口的通信协议一般是应用层协议，即上位机和下位机之间的通信协议。这里的应用层协议是师兄设计的，之前也看过几遍，但没看懂，今天来仔细分析一下。</p>\n<p><code>void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)</code> 是串口接收中断的回调函数，简单理解就是每次串口接收到数据都会调用这个函数。</p>\n<h2 id=\"协议格式\"><a href=\"#协议格式\" class=\"headerlink\" title=\"协议格式\"></a>协议格式</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">A00B0000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// A后面的两位数字代表通道号</span></span><br><span class=\"line\"><span class=\"comment\">// B后面的四位数字代表值</span></span><br><span class=\"line\"><span class=\"comment\">// 注：均为字符格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">A01B1200</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码正文\"><a href=\"#代码正文\" class=\"headerlink\" title=\"代码正文\"></a>代码正文</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">HAL_UART_RxCpltCallback</span><span class=\"params\">(UART_HandleTypeDef *huart)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*define a symbol</span></span><br><span class=\"line\"><span class=\"comment\">\trcvstate:\t|\t    7\t|\t    6\t|\t\t5\t|\t4\t\t|3|\t2|\t1|\t0|</span></span><br><span class=\"line\"><span class=\"comment\">\tstate bit  \t|&#x27;A&#x27;received|&#x27;B&#x27;received|cmd rcv cplt| ERROR\t| receive index |</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">uint8_t</span> rcvstate = <span class=\"number\">0x00</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> (UART_RCV_DATA)\t<span class=\"comment\">//switch the received data</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;A&#x27;</span>:\t<span class=\"comment\">//data head is &#x27;A&#x27;</span></span><br><span class=\"line\">\t\t\tUART_RCV_BUFFER[<span class=\"number\">0</span>] = <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">\t\t\trcvstate |= <span class=\"number\">0x81</span>;\t<span class=\"comment\">//set A flag and data cnt 1</span></span><br><span class=\"line\">  \t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  \t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;B&#x27;</span>:\t<span class=\"comment\">//data head2 is &#x27;B&#x27;</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(rcvstate == <span class=\"number\">0x83</span>)\t<span class=\"comment\">//if get &#x27;A&#x27; and data index equals 3</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\trcvstate = <span class=\"number\">0xC4</span>;\t<span class=\"comment\">//set A and B flag and data cnt 4</span></span><br><span class=\"line\">\t\t\t\tUART_RCV_BUFFER[<span class=\"number\">3</span>] = <span class=\"string\">&#x27;B&#x27;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\trcvstate = <span class=\"number\">0x00</span>;\t<span class=\"comment\">//reset state</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">  \t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  \t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(UART_RCV_DATA - <span class=\"string\">&#x27;0&#x27;</span> &lt;= <span class=\"number\">9</span>)\t<span class=\"comment\">//check if data is numbers</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(rcvstate &amp; <span class=\"number\">0xC0</span>)\t<span class=\"comment\">//if rcvstate is 0x8X or 0xCX, result is true</span></span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tUART_RCV_BUFFER[rcvstate &amp; <span class=\"number\">0x0F</span>] = UART_RCV_DATA;\t<span class=\"comment\">//save data to buffer[index]</span></span><br><span class=\"line\">\t\t\t\t\trcvstate += <span class=\"number\">1</span>;\t<span class=\"comment\">//data index increase</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\trcvstate = <span class=\"number\">0x00</span>;\t<span class=\"comment\">//reset state</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>\t<span class=\"comment\">//other data received</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//now no other CMD is defined</span></span><br><span class=\"line\">\t\t\t\trcvstate = <span class=\"number\">0x00</span>;\t<span class=\"comment\">//reset state</span></span><br><span class=\"line\">  \t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((rcvstate &amp; <span class=\"number\">0x0F</span>) == <span class=\"number\">8</span>)\t<span class=\"comment\">//Data receive completed</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\trcvstate |= <span class=\"number\">0x20</span>;\t<span class=\"comment\">//SET complete flag</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tCMD_temp:</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\thigh 16 bits \t=\tContral Channel</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tlow 16 bits \t=\tContral Value</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t*/</span></span><br><span class=\"line\">\t\t\t\t<span class=\"type\">uint32_t</span> CMD_temp = <span class=\"number\">0x00000000</span>;</span><br><span class=\"line\">\t\t\t\tCMD_temp = <span class=\"number\">10</span> * (UART_RCV_BUFFER[<span class=\"number\">1</span>] - <span class=\"string\">&#x27;0&#x27;</span>)\t<span class=\"comment\">//calculate ctrl channel</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t+ (UART_RCV_BUFFER[<span class=\"number\">2</span>] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">\t\t\t\tCMD_temp &lt;&lt;= <span class=\"number\">16</span>;\t<span class=\"comment\">//move channel data to high 16 bits</span></span><br><span class=\"line\">\t\t\t\tCMD_temp += <span class=\"number\">1000</span> * (UART_RCV_BUFFER[<span class=\"number\">4</span>] - <span class=\"string\">&#x27;0&#x27;</span>)\t<span class=\"comment\">//calculate ctrl value</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t+ <span class=\"number\">100</span> * (UART_RCV_BUFFER[<span class=\"number\">5</span>] - <span class=\"string\">&#x27;0&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t+ <span class=\"number\">10</span> * (UART_RCV_BUFFER[<span class=\"number\">6</span>] - <span class=\"string\">&#x27;0&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t+ <span class=\"number\">1</span> * (UART_RCV_BUFFER[<span class=\"number\">7</span>] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//send CMD message</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"built_in\">osMessageQueuePut</span>(CMD_QueueHandle, &amp;CMD_temp, <span class=\"number\">0</span>, <span class=\"number\">0</span>) == osOK)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\trcvstate = <span class=\"number\">0x00</span>;\t<span class=\"comment\">//reset state</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\trcvstate |= <span class=\"number\">0x10</span>;\t<span class=\"comment\">//report error</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(rcvstate &amp; <span class=\"number\">0x10</span>)\t<span class=\"comment\">//ERROR report signal</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//send error report</span></span><br><span class=\"line\">\t\trcvstate = <span class=\"number\">0x00</span>;\t<span class=\"comment\">//reset state</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解析过程\"><a href=\"#解析过程\" class=\"headerlink\" title=\"解析过程\"></a>解析过程</h2><p>代码里面有注释可以参考，口头表述比较困难这里用结果来表示吧。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">//char input[13] = <span class=\"string\">&quot;A02B0005CCCC&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">输入的数据为 :A  rcvstate: 81</span><br><span class=\"line\">输入的数据为 :0  rcvstate: 82</span><br><span class=\"line\">输入的数据为 :2  rcvstate: 83</span><br><span class=\"line\">输入的数据为 :B  rcvstate: c4</span><br><span class=\"line\">输入的数据为 :0  rcvstate: c5</span><br><span class=\"line\">输入的数据为 :0  rcvstate: c6</span><br><span class=\"line\">输入的数据为 :0  rcvstate: c7</span><br><span class=\"line\">输入的数据为 :5  rcvstate: e8</span><br><span class=\"line\">输入的数据为 :C  rcvstate: 0</span><br><span class=\"line\">输入的数据为 :C  rcvstate: 0</span><br><span class=\"line\">输入的数据为 :C  rcvstate: 0</span><br><span class=\"line\">输入的数据为 :C  rcvstate: 0</span><br><span class=\"line\">输入的数据为 :  rcvstate: 0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"已知的BUG\"><a href=\"#已知的BUG\" class=\"headerlink\" title=\"已知的BUG\"></a>已知的BUG</h2><p>发送 <code>A02B010</code> 也会有数据产生，而且会乱码</p>\n","more":"<h2 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h2><p><a href=\"https://baike.baidu.com/item/%E4%B8%B2%E8%A1%8C%E7%AB%AF%E5%8F%A3\">串口</a>这里不再多说，不懂的进链接去了解一下。在STM32中，串口的通信协议一般是应用层协议，即上位机和下位机之间的通信协议。这里的应用层协议是师兄设计的，之前也看过几遍，但没看懂，今天来仔细分析一下。</p>\n<p><code>void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)</code> 是串口接收中断的回调函数，简单理解就是每次串口接收到数据都会调用这个函数。</p>\n<h2 id=\"协议格式\"><a href=\"#协议格式\" class=\"headerlink\" title=\"协议格式\"></a>协议格式</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">A00B0000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// A后面的两位数字代表通道号</span></span><br><span class=\"line\"><span class=\"comment\">// B后面的四位数字代表值</span></span><br><span class=\"line\"><span class=\"comment\">// 注：均为字符格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">A01B1200</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码正文\"><a href=\"#代码正文\" class=\"headerlink\" title=\"代码正文\"></a>代码正文</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">HAL_UART_RxCpltCallback</span><span class=\"params\">(UART_HandleTypeDef *huart)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*define a symbol</span></span><br><span class=\"line\"><span class=\"comment\">\trcvstate:\t|\t    7\t|\t    6\t|\t\t5\t|\t4\t\t|3|\t2|\t1|\t0|</span></span><br><span class=\"line\"><span class=\"comment\">\tstate bit  \t|&#x27;A&#x27;received|&#x27;B&#x27;received|cmd rcv cplt| ERROR\t| receive index |</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">uint8_t</span> rcvstate = <span class=\"number\">0x00</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> (UART_RCV_DATA)\t<span class=\"comment\">//switch the received data</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;A&#x27;</span>:\t<span class=\"comment\">//data head is &#x27;A&#x27;</span></span><br><span class=\"line\">\t\t\tUART_RCV_BUFFER[<span class=\"number\">0</span>] = <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">\t\t\trcvstate |= <span class=\"number\">0x81</span>;\t<span class=\"comment\">//set A flag and data cnt 1</span></span><br><span class=\"line\">  \t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  \t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;B&#x27;</span>:\t<span class=\"comment\">//data head2 is &#x27;B&#x27;</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(rcvstate == <span class=\"number\">0x83</span>)\t<span class=\"comment\">//if get &#x27;A&#x27; and data index equals 3</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\trcvstate = <span class=\"number\">0xC4</span>;\t<span class=\"comment\">//set A and B flag and data cnt 4</span></span><br><span class=\"line\">\t\t\t\tUART_RCV_BUFFER[<span class=\"number\">3</span>] = <span class=\"string\">&#x27;B&#x27;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\trcvstate = <span class=\"number\">0x00</span>;\t<span class=\"comment\">//reset state</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">  \t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  \t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(UART_RCV_DATA - <span class=\"string\">&#x27;0&#x27;</span> &lt;= <span class=\"number\">9</span>)\t<span class=\"comment\">//check if data is numbers</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(rcvstate &amp; <span class=\"number\">0xC0</span>)\t<span class=\"comment\">//if rcvstate is 0x8X or 0xCX, result is true</span></span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tUART_RCV_BUFFER[rcvstate &amp; <span class=\"number\">0x0F</span>] = UART_RCV_DATA;\t<span class=\"comment\">//save data to buffer[index]</span></span><br><span class=\"line\">\t\t\t\t\trcvstate += <span class=\"number\">1</span>;\t<span class=\"comment\">//data index increase</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\trcvstate = <span class=\"number\">0x00</span>;\t<span class=\"comment\">//reset state</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>\t<span class=\"comment\">//other data received</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//now no other CMD is defined</span></span><br><span class=\"line\">\t\t\t\trcvstate = <span class=\"number\">0x00</span>;\t<span class=\"comment\">//reset state</span></span><br><span class=\"line\">  \t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((rcvstate &amp; <span class=\"number\">0x0F</span>) == <span class=\"number\">8</span>)\t<span class=\"comment\">//Data receive completed</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\trcvstate |= <span class=\"number\">0x20</span>;\t<span class=\"comment\">//SET complete flag</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tCMD_temp:</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\thigh 16 bits \t=\tContral Channel</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tlow 16 bits \t=\tContral Value</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t*/</span></span><br><span class=\"line\">\t\t\t\t<span class=\"type\">uint32_t</span> CMD_temp = <span class=\"number\">0x00000000</span>;</span><br><span class=\"line\">\t\t\t\tCMD_temp = <span class=\"number\">10</span> * (UART_RCV_BUFFER[<span class=\"number\">1</span>] - <span class=\"string\">&#x27;0&#x27;</span>)\t<span class=\"comment\">//calculate ctrl channel</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t+ (UART_RCV_BUFFER[<span class=\"number\">2</span>] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">\t\t\t\tCMD_temp &lt;&lt;= <span class=\"number\">16</span>;\t<span class=\"comment\">//move channel data to high 16 bits</span></span><br><span class=\"line\">\t\t\t\tCMD_temp += <span class=\"number\">1000</span> * (UART_RCV_BUFFER[<span class=\"number\">4</span>] - <span class=\"string\">&#x27;0&#x27;</span>)\t<span class=\"comment\">//calculate ctrl value</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t+ <span class=\"number\">100</span> * (UART_RCV_BUFFER[<span class=\"number\">5</span>] - <span class=\"string\">&#x27;0&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t+ <span class=\"number\">10</span> * (UART_RCV_BUFFER[<span class=\"number\">6</span>] - <span class=\"string\">&#x27;0&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t+ <span class=\"number\">1</span> * (UART_RCV_BUFFER[<span class=\"number\">7</span>] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//send CMD message</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"built_in\">osMessageQueuePut</span>(CMD_QueueHandle, &amp;CMD_temp, <span class=\"number\">0</span>, <span class=\"number\">0</span>) == osOK)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\trcvstate = <span class=\"number\">0x00</span>;\t<span class=\"comment\">//reset state</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\trcvstate |= <span class=\"number\">0x10</span>;\t<span class=\"comment\">//report error</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(rcvstate &amp; <span class=\"number\">0x10</span>)\t<span class=\"comment\">//ERROR report signal</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//send error report</span></span><br><span class=\"line\">\t\trcvstate = <span class=\"number\">0x00</span>;\t<span class=\"comment\">//reset state</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解析过程\"><a href=\"#解析过程\" class=\"headerlink\" title=\"解析过程\"></a>解析过程</h2><p>代码里面有注释可以参考，口头表述比较困难这里用结果来表示吧。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">//char input[13] = <span class=\"string\">&quot;A02B0005CCCC&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">输入的数据为 :A  rcvstate: 81</span><br><span class=\"line\">输入的数据为 :0  rcvstate: 82</span><br><span class=\"line\">输入的数据为 :2  rcvstate: 83</span><br><span class=\"line\">输入的数据为 :B  rcvstate: c4</span><br><span class=\"line\">输入的数据为 :0  rcvstate: c5</span><br><span class=\"line\">输入的数据为 :0  rcvstate: c6</span><br><span class=\"line\">输入的数据为 :0  rcvstate: c7</span><br><span class=\"line\">输入的数据为 :5  rcvstate: e8</span><br><span class=\"line\">输入的数据为 :C  rcvstate: 0</span><br><span class=\"line\">输入的数据为 :C  rcvstate: 0</span><br><span class=\"line\">输入的数据为 :C  rcvstate: 0</span><br><span class=\"line\">输入的数据为 :C  rcvstate: 0</span><br><span class=\"line\">输入的数据为 :  rcvstate: 0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"已知的BUG\"><a href=\"#已知的BUG\" class=\"headerlink\" title=\"已知的BUG\"></a>已知的BUG</h2><p>发送 <code>A02B010</code> 也会有数据产生，而且会乱码</p>\n","categories":[],"tags":[{"name":"Lab","path":"api/tags/Lab.json"}]}
{"title":"upyun","slug":"code/upyun","date":"2021-12-31T11:12:21.000Z","updated":"2022-10-07T06:33:34.418Z","comments":true,"path":"api/articles/code/upyun.json","excerpt":null,"covers":["https://image.wxydejoy.top/image/upyun/2021-12-31-20-33-46.png","https://image.wxydejoy.top/image/upyun/2021-12-31-20-35-41.png"],"content":"<h2 id=\"启\"><a href=\"#启\" class=\"headerlink\" title=\"启\"></a>启</h2><p>前段时间折腾存储空间，折腾一圈还是又拍云最香，<strong>免费</strong>。但是自己不小心把一个文件夹删了，想要找回，却没有回收站这个功能，很遗憾，它就这么没了。</p>\n<p>所以想找个办法备份图床，另外在 Github 逛到了 upyun-sdk 所以就拿来写写。</p>\n<ul>\n<li>将又拍云存储的数据下载到本地，并且上传到一个新的存储空间内。</li>\n<li>为保证数据完整，禁止删除任意文件。</li>\n<li>支持同步</li>\n</ul>\n<h2 id=\"中\"><a href=\"#中\" class=\"headerlink\" title=\"中\"></a>中</h2><p>写这个脚本的最终目的不是省钱（图床一共也没几个钱），而是锻炼自己！</p>\n<p>有目的的学习效率更高！</p>\n<p>通过这个脚本，学习到了一些<code>python</code>的知识</p>\n<ul>\n<li>类的定义 （定义了一个<code>myupyun</code>的子类）</li>\n<li>类的继承 （<code>myupyun</code>类继承了 upyun-py 中的<code>UpYun</code>类，并且添加了一些新的代码）</li>\n<li>递归函数 （又拍云并未提供列举所有目录的接口，自己用递归编写了文件遍历函数）</li>\n<li>多级文件夹 （<code>os.open</code> 有时并不能创建文件夹，<code>os.mkdir</code> 只能创建<strong>一级</strong>文件夹，创建多级文件夹要用 <code>os.mkdirs</code></li>\n</ul>\n<p>另外还认识到一些不足之处来日补上</p>\n<ul>\n<li>函数有些凌乱</li>\n<li>并发下载</li>\n<li>进度条使用不完善</li>\n<li>数据库</li>\n</ul>\n<h2 id=\"潮\"><a href=\"#潮\" class=\"headerlink\" title=\"潮\"></a>潮</h2><p>讲完自己的，下面来讲将给读者的（没错就是屏幕前的你！），分享一下使用方法（0 基础）。</p>\n<p>环境要求 <code>python3</code>+你喜欢的编辑器</p>\n<ol>\n<li><p>克隆仓库</p>\n<p>在你喜欢的地方打开<code>powershell</code> or <code>git bash</code> 这里更建议放服务器里面，当然 Windows 也行</p>\n<p><code>git clone https://github.com/wxydejoy/upyun-backup-server.git</code></p>\n</li>\n<li><p>安装依赖</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m venv venv <span class=\"comment\"># 创建虚拟环境</span></span><br><span class=\"line\">pip install -r requirements.txt</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置参数</p>\n<p>打开<code>main.py</code>按照提示填入合适的参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 只下载和上传，不删除，也就是说不需要删除权限</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 源仓库配置</span></span><br><span class=\"line\">st1_name = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">st1_operator = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">st1_password = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 目标仓库配置</span></span><br><span class=\"line\">st2_name = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">st2_operator = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">st2_password = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">st2_link = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 本地配置</span></span><br><span class=\"line\">local_dir = <span class=\"string\">&quot;local/&quot;</span>  <span class=\"comment\"># 本地相对路径</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>RUN</p>\n<p>运行 <code>main.py</code> 即可</p>\n</li>\n</ol>\n<h2 id=\"终\"><a href=\"#终\" class=\"headerlink\" title=\"终\"></a>终</h2><p>这个备份当然可以自动</p>\n<ol>\n<li><p>服务器<br>宝塔：添加定时任务定时运行脚本即可，注意运行路径<br>非宝塔：自行百度添加服务器定时任务</p>\n</li>\n<li><p>Windows<br>打开系统搜索，搜<code>任务计划程序</code></p>\n<p><img src=\"https://image.wxydejoy.top/image/upyun/2021-12-31-20-33-46.png\" alt=\"2021-12-31-20-33-46\"></p>\n<p><img src=\"https://image.wxydejoy.top/image/upyun/2021-12-31-20-35-41.png\" alt=\"2021-12-31-20-35-41\"></p>\n<p>点击创建基本任务，按照引导创建即可（友情提示：任务计划程序很好用，思路放开）</p>\n</li>\n</ol>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","more":"<h2 id=\"启\"><a href=\"#启\" class=\"headerlink\" title=\"启\"></a>启</h2><p>前段时间折腾存储空间，折腾一圈还是又拍云最香，<strong>免费</strong>。但是自己不小心把一个文件夹删了，想要找回，却没有回收站这个功能，很遗憾，它就这么没了。</p>\n<p>所以想找个办法备份图床，另外在 Github 逛到了 upyun-sdk 所以就拿来写写。</p>\n<ul>\n<li>将又拍云存储的数据下载到本地，并且上传到一个新的存储空间内。</li>\n<li>为保证数据完整，禁止删除任意文件。</li>\n<li>支持同步</li>\n</ul>\n<h2 id=\"中\"><a href=\"#中\" class=\"headerlink\" title=\"中\"></a>中</h2><p>写这个脚本的最终目的不是省钱（图床一共也没几个钱），而是锻炼自己！</p>\n<p>有目的的学习效率更高！</p>\n<p>通过这个脚本，学习到了一些<code>python</code>的知识</p>\n<ul>\n<li>类的定义 （定义了一个<code>myupyun</code>的子类）</li>\n<li>类的继承 （<code>myupyun</code>类继承了 upyun-py 中的<code>UpYun</code>类，并且添加了一些新的代码）</li>\n<li>递归函数 （又拍云并未提供列举所有目录的接口，自己用递归编写了文件遍历函数）</li>\n<li>多级文件夹 （<code>os.open</code> 有时并不能创建文件夹，<code>os.mkdir</code> 只能创建<strong>一级</strong>文件夹，创建多级文件夹要用 <code>os.mkdirs</code></li>\n</ul>\n<p>另外还认识到一些不足之处来日补上</p>\n<ul>\n<li>函数有些凌乱</li>\n<li>并发下载</li>\n<li>进度条使用不完善</li>\n<li>数据库</li>\n</ul>\n<h2 id=\"潮\"><a href=\"#潮\" class=\"headerlink\" title=\"潮\"></a>潮</h2><p>讲完自己的，下面来讲将给读者的（没错就是屏幕前的你！），分享一下使用方法（0 基础）。</p>\n<p>环境要求 <code>python3</code>+你喜欢的编辑器</p>\n<ol>\n<li><p>克隆仓库</p>\n<p>在你喜欢的地方打开<code>powershell</code> or <code>git bash</code> 这里更建议放服务器里面，当然 Windows 也行</p>\n<p><code>git clone https://github.com/wxydejoy/upyun-backup-server.git</code></p>\n</li>\n<li><p>安装依赖</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m venv venv <span class=\"comment\"># 创建虚拟环境</span></span><br><span class=\"line\">pip install -r requirements.txt</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置参数</p>\n<p>打开<code>main.py</code>按照提示填入合适的参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 只下载和上传，不删除，也就是说不需要删除权限</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 源仓库配置</span></span><br><span class=\"line\">st1_name = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">st1_operator = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">st1_password = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 目标仓库配置</span></span><br><span class=\"line\">st2_name = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">st2_operator = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">st2_password = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">st2_link = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 本地配置</span></span><br><span class=\"line\">local_dir = <span class=\"string\">&quot;local/&quot;</span>  <span class=\"comment\"># 本地相对路径</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>RUN</p>\n<p>运行 <code>main.py</code> 即可</p>\n</li>\n</ol>\n<h2 id=\"终\"><a href=\"#终\" class=\"headerlink\" title=\"终\"></a>终</h2><p>这个备份当然可以自动</p>\n<ol>\n<li><p>服务器<br>宝塔：添加定时任务定时运行脚本即可，注意运行路径<br>非宝塔：自行百度添加服务器定时任务</p>\n</li>\n<li><p>Windows<br>打开系统搜索，搜<code>任务计划程序</code></p>\n<p><img src=\"https://image.wxydejoy.top/image/upyun/2021-12-31-20-33-46.png\" alt=\"2021-12-31-20-33-46\"></p>\n<p><img src=\"https://image.wxydejoy.top/image/upyun/2021-12-31-20-35-41.png\" alt=\"2021-12-31-20-35-41\"></p>\n<p>点击创建基本任务，按照引导创建即可（友情提示：任务计划程序很好用，思路放开）</p>\n</li>\n</ol>\n","categories":[],"tags":[{"name":"😄Upyun","path":"api/tags/😄Upyun.json"}]}
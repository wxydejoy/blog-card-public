{"title":"leetcode #3 无重复字符的最长子串","slug":"code/leetcode #3 无重复字符的最长子串","date":"2023-07-03T15:37:25.094Z","updated":"2023-07-03T15:37:25.094Z","comments":true,"path":"api/articles/code/leetcode #3 无重复字符的最长子串.json","excerpt":null,"covers":null,"content":"<!--\n * @Author: weiekko weiekko@gmail.com\n * @Date: 2023-06-08 08:23:40\n * @LastEditors: weiekko weiekko@gmail.com\n * @LastEditTime: 2023-06-08 09:10:03\n * @FilePath: \\blog\\source\\_posts\\leetcode #3 无重复字符的最长子串.md\n * @Description: \n * \n * Copyright (c) 2023 by weiekko weiekko@gmail.com, All Rights Reserved. \n-->\n\n<h1 id=\"3-无重复字符的最长子串\"><a href=\"#3-无重复字符的最长子串\" class=\"headerlink\" title=\"3 无重复字符的最长子串\"></a>3 无重复字符的最长子串</h1><h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">lengthOfLongestSubstring</span><span class=\"params\">(string s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string temp;</span><br><span class=\"line\">    <span class=\"type\">int</span> ftemp = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = s.<span class=\"built_in\">length</span>(); i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (temp.<span class=\"built_in\">find</span>(s[s.<span class=\"built_in\">length</span>() - i]) &gt; temp.<span class=\"built_in\">length</span>()) <span class=\"comment\">// 无重复  temp.find(s[s.length() - i]) == -1 但会很大 所以</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 无重复</span></span><br><span class=\"line\">            temp.<span class=\"built_in\">push_back</span>(s[s.<span class=\"built_in\">length</span>() - i]);</span><br><span class=\"line\">            ftemp = temp.<span class=\"built_in\">length</span>() &gt; ftemp ? temp.<span class=\"built_in\">length</span>() : ftemp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 有重复</span></span><br><span class=\"line\">            i += (temp.<span class=\"built_in\">length</span>() - temp.<span class=\"built_in\">find</span>(s[s.<span class=\"built_in\">length</span>() - i]) - <span class=\"number\">1</span>);</span><br><span class=\"line\">            temp.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            temp.<span class=\"built_in\">push_back</span>(s[s.<span class=\"built_in\">length</span>() - i]);</span><br><span class=\"line\">            ftemp = temp.<span class=\"built_in\">length</span>() &gt; ftemp ? temp.<span class=\"built_in\">length</span>() : ftemp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ftemp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用到的函数\"><a href=\"#使用到的函数\" class=\"headerlink\" title=\"使用到的函数\"></a>使用到的函数</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string::<span class=\"built_in\">find</span>(<span class=\"type\">char</span> c) <span class=\"comment\">// 返回c在string中的位置 无则返回string::npos</span></span><br><span class=\"line\">string::<span class=\"built_in\">length</span>() <span class=\"comment\">// 返回string的长度</span></span><br><span class=\"line\">string::<span class=\"built_in\">push_back</span>(<span class=\"type\">char</span> c) <span class=\"comment\">// 在string的末尾添加c</span></span><br><span class=\"line\">string::<span class=\"built_in\">clear</span>() <span class=\"comment\">// 清空string</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>刚开始看错了题</p>\n<p>做完去看评论 发现这个题的思路是滑动窗口</p>\n<blockquote>\n<p>这道题主要用到思路是：滑动窗口</p>\n</blockquote>\n<blockquote>\n<p>什么是滑动窗口？</p>\n</blockquote>\n<blockquote>\n<p>其实就是一个队列,比如例题中的 abcabcbb，进入这个队列（窗口）为 abc 满足题目要求，当再进入 a，队列变成了 abca，这时候不满足要求。所以，我们要移动这个队列！</p>\n</blockquote>\n<blockquote>\n<p>如何移动？</p>\n</blockquote>\n<blockquote>\n<p>我们只要把队列的左边的元素移出就行了，直到满足题目要求！</p>\n</blockquote>\n<blockquote>\n<p>一直维持这样的队列，找出队列出现最长的长度时候，求出解！</p>\n</blockquote>\n<blockquote>\n<p>时间复杂度：O(n)O(n)O(n)</p>\n</blockquote>\n<blockquote>\n<p>作者：powcai<br>链接：<a href=\"https://leetcode.cn/problems/longest-substring-without-repeating-characters/solutions/3982/hua-dong-chuang-kou-by-powcai/\">https://leetcode.cn/problems/longest-substring-without-repeating-characters/solutions/3982/hua-dong-chuang-kou-by-powcai/</a></p>\n</blockquote>\n<blockquote>\n<p>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n</blockquote>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>c++ 很多特性还不会用 要继续学习</p>\n","more":"<!--\n * @Author: weiekko weiekko@gmail.com\n * @Date: 2023-06-08 08:23:40\n * @LastEditors: weiekko weiekko@gmail.com\n * @LastEditTime: 2023-06-08 09:10:03\n * @FilePath: \\blog\\source\\_posts\\leetcode #3 无重复字符的最长子串.md\n * @Description: \n * \n * Copyright (c) 2023 by weiekko weiekko@gmail.com, All Rights Reserved. \n-->\n\n<h1 id=\"3-无重复字符的最长子串\"><a href=\"#3-无重复字符的最长子串\" class=\"headerlink\" title=\"3 无重复字符的最长子串\"></a>3 无重复字符的最长子串</h1><h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">lengthOfLongestSubstring</span><span class=\"params\">(string s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string temp;</span><br><span class=\"line\">    <span class=\"type\">int</span> ftemp = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = s.<span class=\"built_in\">length</span>(); i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (temp.<span class=\"built_in\">find</span>(s[s.<span class=\"built_in\">length</span>() - i]) &gt; temp.<span class=\"built_in\">length</span>()) <span class=\"comment\">// 无重复  temp.find(s[s.length() - i]) == -1 但会很大 所以</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 无重复</span></span><br><span class=\"line\">            temp.<span class=\"built_in\">push_back</span>(s[s.<span class=\"built_in\">length</span>() - i]);</span><br><span class=\"line\">            ftemp = temp.<span class=\"built_in\">length</span>() &gt; ftemp ? temp.<span class=\"built_in\">length</span>() : ftemp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 有重复</span></span><br><span class=\"line\">            i += (temp.<span class=\"built_in\">length</span>() - temp.<span class=\"built_in\">find</span>(s[s.<span class=\"built_in\">length</span>() - i]) - <span class=\"number\">1</span>);</span><br><span class=\"line\">            temp.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            temp.<span class=\"built_in\">push_back</span>(s[s.<span class=\"built_in\">length</span>() - i]);</span><br><span class=\"line\">            ftemp = temp.<span class=\"built_in\">length</span>() &gt; ftemp ? temp.<span class=\"built_in\">length</span>() : ftemp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ftemp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用到的函数\"><a href=\"#使用到的函数\" class=\"headerlink\" title=\"使用到的函数\"></a>使用到的函数</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string::<span class=\"built_in\">find</span>(<span class=\"type\">char</span> c) <span class=\"comment\">// 返回c在string中的位置 无则返回string::npos</span></span><br><span class=\"line\">string::<span class=\"built_in\">length</span>() <span class=\"comment\">// 返回string的长度</span></span><br><span class=\"line\">string::<span class=\"built_in\">push_back</span>(<span class=\"type\">char</span> c) <span class=\"comment\">// 在string的末尾添加c</span></span><br><span class=\"line\">string::<span class=\"built_in\">clear</span>() <span class=\"comment\">// 清空string</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>刚开始看错了题</p>\n<p>做完去看评论 发现这个题的思路是滑动窗口</p>\n<blockquote>\n<p>这道题主要用到思路是：滑动窗口</p>\n</blockquote>\n<blockquote>\n<p>什么是滑动窗口？</p>\n</blockquote>\n<blockquote>\n<p>其实就是一个队列,比如例题中的 abcabcbb，进入这个队列（窗口）为 abc 满足题目要求，当再进入 a，队列变成了 abca，这时候不满足要求。所以，我们要移动这个队列！</p>\n</blockquote>\n<blockquote>\n<p>如何移动？</p>\n</blockquote>\n<blockquote>\n<p>我们只要把队列的左边的元素移出就行了，直到满足题目要求！</p>\n</blockquote>\n<blockquote>\n<p>一直维持这样的队列，找出队列出现最长的长度时候，求出解！</p>\n</blockquote>\n<blockquote>\n<p>时间复杂度：O(n)O(n)O(n)</p>\n</blockquote>\n<blockquote>\n<p>作者：powcai<br>链接：<a href=\"https://leetcode.cn/problems/longest-substring-without-repeating-characters/solutions/3982/hua-dong-chuang-kou-by-powcai/\">https://leetcode.cn/problems/longest-substring-without-repeating-characters/solutions/3982/hua-dong-chuang-kou-by-powcai/</a></p>\n</blockquote>\n<blockquote>\n<p>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n</blockquote>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>c++ 很多特性还不会用 要继续学习</p>\n","categories":[],"tags":[]}